import { Button, Card, Col, Divider, Layout, Row, Spin } from "antd";
import Head from "next/head";
import { useEffect, useState } from "react";
import { FiAlertCircle, FiXCircle, FiCheckCircle, FiAlertOctagon } from "react-icons/fi";
import Airtable from "airtable";
import { useRouter } from "next/router";
import { DeliveryModal } from "../components/deliveryModal";

const { Header, Content } = Layout;

const ListPage = () => {
  const airtableUserBase = new Airtable({
    apiKey: process.env.NEXT_PUBLIC_AIRTABLE_API_KEY,
  }).base("apptK8T882icYTvY7");
  const fileTableList = airtableUserBase("File List");

  const router = useRouter();

  const [userDetails, setUserDetails] = useState({});
  const [zoneDetails, setZoneDetails] = useState([]);
  const [selectedFile, setSelectedFile] = useState({});
  const [showDeliveryModal, setShowDeliveryModal] = useState(false);
  const [displayLoader, setDisplayLoader] = useState(true);
  const [filter, setFilter] = useState("To Be Visited");

  useEffect(() => {
    const user = JSON.parse(localStorage.getItem("user-ashara"));
    if (!user) {
      router.push("/");
    } else {
      setUserDetails(user);
      getFileListBySubSector(user["GROUP CODE"]);
    }
  }, []);

  const getFileListBySubSector = async (zone) => {
    const finalData = [];
    setDisplayLoader(true);
    await fileTableList
      .select({
        maxRecords: 1200,
        view: "Grid view",
        filterByFormula: `({GROUP CODE} = '${zone}')`,
      })
      .eachPage(
        function page(records, fetchNextPage) {
          records.forEach(function (record) {
            finalData.push(record);
          });

          fetchNextPage();
        },
        function done(err) {
          setZoneDetails(
            finalData.map((val) => ({ ...val.fields, id: val.id }))
          );
          setDisplayLoader(false);

          if (err) {
            console.error(err);
            return;
          }
        }
      );
  };

  const handleShowDeliveryModal = (fileValue) => {
    setSelectedFile(fileValue);
    setShowDeliveryModal(true);
  };

  const handleLogout = () => {
    const user = JSON.parse(localStorage.getItem("user-ashara"));
    if (user) {
      localStorage.clear();
      router.push("/");
    }
  };

  return (
    <Layout className="min-h-screen overflow-y-auto ">
      <Head>
        <title>Ashara Ohbat</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header className="h-20 p-0 flex px-4 items-center">
        <p className="whitespace-nowrap text-lg text-white text-ellipsis overflow-hidden flex-grow">
          {userDetails.Name}
        </p>
        <Button
          onClick={handleLogout}
          className="ml-4 bg-blue-500 hover:bg-blue-600 active:bg-blue-700 focus:outline-none focus:ring focus:ring-blue-300"
        >
          Logout
        </Button>
      </Header>
      {displayLoader ? (
        <div className="absolute z-50 top-0 left-0 w-screen h-screen bg-white/70 flex items-center justify-center">
          <Spin size="large" />
        </div>
      ) : null}
      <Content className="px-4 py-6">
        <div className="w-full">
          <h3 className="text-3xl mb-4">Ashara Ohbat</h3>
          <div className="mb-8 flex flex-col w-full">
            <div className="flex items-start mb-4">
              <h3 className="text-2xl">{userDetails["GROUP CODE"]} </h3>
            </div>
            <div className="flex flex-col items-start mb-4">
              <h3 className="text-2xl">Khitmat Guzaar : </h3>
              <p className="flex-grow text-xl mt-1">
                {userDetails["Khitmat Guzaar"]}
              </p>
            </div>
            <div className="flex flex-col items-start mb-4">
              <h3 className="text-2xl">Marol Coordinator :</h3>
              <p className="flex-grow text-xl mt-1">
                {userDetails["Marol Coordinator - Group Leader"]}
              </p>
            </div>
            <div className="flex flex-col items-start mb-4">
              <h3 className="text-2xl">Marol Group Leader</h3>
              <p className="flex-grow text-xl mt-1">
                {userDetails["Marol Ohbat Team - Group Leader"]}
              </p>
            </div>
          </div>
          <Row gutter={[16, 16]}>
            <Col xs={12} md={8} lg={6} xl={4}>
              <Card onClick={() => setFilter("To Be Visited")} className={filter === "To Be Visited" ? "p-0 rounded-lg bg-gray-200" : "p-0 rounded-lg"}>
                <div className="flex">
                  <span className="flex items-center justify-center w-9 text-4xl mr-4 text-blue-500">
                    <FiAlertCircle />
                  </span>
                  <div className="flex flex-col flex-grow">
                    <p className="text-xs">To Be Visited</p>
                    <p className="text-4xl text-blue-500">
                      {
                        zoneDetails.filter(
                          (val) =>
                            !val["VISIT STATUS"] ||
                            val["VISIT STATUS"] === "To Be Visited"
                        ).length
                      }
                    </p>
                  </div>
                </div>
              </Card>
            </Col>
            <Col xs={12} md={8} lg={6} xl={4}>
              <Card onClick={() => setFilter("Not Available")} className={filter === "Not Available" ? "p-0 rounded-lg bg-gray-200" : "p-0 rounded-lg"}>
                <div className="flex">
                  <div className="flex items-center justify-center w-9 text-4xl mr-4 text-red-600">
                    <FiAlertOctagon />
                  </div>
                  <div className="flex flex-col flex-grow">
                    <p className="text-xs">Not Available</p>
                    <p className="text-4xl text-red-600">
                      {
                        zoneDetails.filter((val) => val["VISIT STATUS"] === "Not Available")
                          .length
                      }
                    </p>
                  </div>
                </div>
              </Card>
            </Col>
            <Col xs={12} md={8} lg={6} xl={4}>
              <Card onClick={() => setFilter("Address Change")} className={filter === "Address Change" ? "p-0 rounded-lg bg-gray-200" : "p-0 rounded-lg"}>
                <div className="flex">
                  <div className="flex items-center justify-center w-9 text-4xl mr-4 text-amber-600">
                    <FiXCircle />
                  </div>
                  <div className="flex flex-col flex-grow">
                    <p className="text-[10px]">Address Change</p>
                    <p className="text-4xl text-amber-600">
                      {
                        zoneDetails.filter((val) => val["VISIT STATUS"] === "Address Change")
                          .length
                      }
                    </p>
                  </div>
                </div>
              </Card>
            </Col>
            <Col xs={12} md={8} lg={6} xl={4}>
              <Card onClick={() => setFilter("Completed")} className={filter === "Completed" ? "p-0 rounded-lg bg-gray-200" : "p-0 rounded-lg"}>
                <div className="flex">
                  <div className="flex items-center justify-center w-9 text-4xl mr-4 text-green-600">
                    <FiCheckCircle />
                  </div>
                  <div className="flex flex-col flex-grow">
                    <p className="text-xs">Completed</p>
                    <p className="text-4xl text-green-600">
                      {
                        zoneDetails.filter((val) => val["VISIT STATUS"] === "Completed")
                          .length
                      }
                    </p>
                  </div>
                </div>
              </Card>
            </Col>
          </Row>

          <div className="w-full flex items-start my-8">
            <h3 className="text-2xl capitalize">{filter + " list"}</h3>
            <h3 className="text-2xl mx-1">:</h3>
          </div>

          {zoneDetails
            .filter(
              (value) => value["VISIT STATUS"] === filter
            )
            .map((val) => (
              <Card
                key={val.id}
                className=" padding-0-card rounded-lg mb-2"
              >
                <div className="flex px-4 py-4">
                  <div className="flex flex-col flex-grow">
                    <Row gutter={[8, 8]}>
                      <Col xs={24}>
                        <span className="text-xs">HOF Name</span>
                        <p className="text-sm">{val["HOF Name"]}</p>
                      </Col>
                      <Col xs={12}>
                        <span className="text-xs">File No</span>
                        <p className="text-sm">{val.file_number}</p>
                      </Col>
                      <Col xs={12}>
                        <span className="text-xs">HOF contact</span>
                        <p className="text-sm">{val["HOF contact"]}</p>
                      </Col>
                      <Col xs={24}>
                        <span className="text-xs">Address</span>
                        <p className="text-sm">{val.address}</p>
                      </Col>
                    </Row>
                  </div>
                  <div className="ml-4">
                    <Button
                      className="bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white border border-blue-500 hover:border-transparent rounded"
                      disabled={val["VISIT STATUS"] !== "To Be Visited"}
                      onClick={() => handleShowDeliveryModal(val)}
                    >
                      Visit
                    </Button>
                  </div>
                </div>
                <Divider className="my-0" />
                <div className="flex flex-col px-4 py-4">
                  <Row gutter={[8, 8]}>
                    <Col xs={16}>
                      <span className="text-xs">Masool Name</span>
                      <p className="text-sm">{val["Masool Name"]}</p>
                    </Col>
                    <Col xs={8}>
                      <span className="text-xs">Masool Contact</span>
                      <p className="text-sm">{val["Masool Contact"]}</p>
                    </Col>
                    <Col xs={16}>
                      <span className="text-xs">Masoola Name</span>
                      <p className="text-sm">{val["Masoola Name"]}</p>
                    </Col>
                    <Col xs={8}>
                      <span className="text-xs">Masoola Contact</span>
                      <p className="text-sm">{val["Masoola Contact"]}</p>
                    </Col>
                  </Row>
                </div>
              </Card>
            ))}

        </div>
      </Content>
      {showDeliveryModal ? (
        <DeliveryModal
          showDeliveryModal={showDeliveryModal}
          handleClose={() => setShowDeliveryModal(false)}
          fileValue={selectedFile}
          callback={async () => {
            await getFileListBySubSector(userDetails["GROUP CODE"]);
          }}
        />
      ) : null}
    </Layout>
  );
};

export default ListPage;
